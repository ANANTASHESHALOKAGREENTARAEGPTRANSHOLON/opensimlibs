<?xml version="1.0"?>
<project name="subversion" default="build" basedir="../../ext/subversion" xmlns="http://nant.sf.net/release/0.85/nant.xsd">

	<target name="rebuild" depends="clean,build" />

	<target name="clean" description="Cleans previous builds.">
		<delete>
			<fileset>
				<include name="${configuration}_${platform}/**" />
			</fileset>
		</delete>
	</target>

	<target name="build" >
		<mkdir dir="${configuration}_${platform}" />
		<copy file="subversion/svn_private_config.hw" tofile="subversion/svn_private_config.h" overwrite="true" />
		<foreach item="Folder" property="foldername">
			<in>
				<items>
					<include name="subversion/libsvn*" />
					<exclude name="subversion/libsvn_ra_serf" />
				</items>
			</in>
			<do>
				<property name="fname" value="${path::get-file-name(foldername)}" />
				<property name="soname" value="${path::change-extension(fname, 'so')}" />
				<property name="libname" value="${path::change-extension(fname, 'lib')}" />
				<mkdir dir="${configuration}_${platform}/${fname}" />
				<cl outputdir="${configuration}_${platform}/${fname}">
					<arg value="/O2" if="${configuration == 'release'}" />
					<arg value="/Ob1" if="${configuration == 'release'}" />
					<arg value="/Od" if="${configuration != 'release'}" />
					<arg value="/GF" if="${configuration == 'release'}" />
					<arg value="/FD" />
					<arg value="/EHsc" />
					<arg value="/MD" if="${configuration == 'release'}" />
					<arg value="/MDd" if="${configuration != 'release'}" />
					<arg value="/Gy" />
					<arg value="/W3" />
					<arg value="/nologo" />
					<arg value="/c" />
					<arg value="/Zi" />
					<arg value="/errorReport:prompt" />
					<sources>
						<include name="subversion/${fname}/**.c" />
					</sources>
					<includedirs>
						<include name="subversion" />
						<include name="subversion/include" />
						<include name="subversion/${fname}" />
						<include name="apr/include" />
						<include name="apr-util/include" />
						<include name="apr-util/xml/expat/lib" />
						<include name="../svn-${platform}-libintl/inc" />
						<include name="../bdb/build_${platform}" />
						<include name="../zlib" />
						<include name="neon/src" />
					</includedirs>
					<defines>
						<define name="_CRT_NONSTDC_NO_DEPRECATE" />
						<define name="_USE_32BIT_TIME_T" />
						<define name="APU_HAVE_DB=1" />
						<define name="ENABLE_NLS" />
						<define name="SVN_NEON_0_25=1" />
						<define name="alloca=_alloca" />
						<define name="snprintf=_snprintf" />
						<define name="WIN32" />
						<define name="_WINDOWS" />
						<define name="_WIN32" />
						<define name="NDEBUG" if="${configuration == 'release'}"/>
						<define name="_DEBUG" if="${configuration != 'release'}"/>
					</defines>
				</cl>
				<lib 
					output="${configuration}_${platform}/${fname}.lib" 
					options='/NOLOGO /SUBSYSTEM:WINDOWS /MACHINE:X86'>
					<sources>
						<include name="${configuration}_${platform}/${fname}/**.obj" />
					</sources>
				</lib>
			</do>
		</foreach>
		<mkdir dir="${configuration}_${platform}/svn" />
		<cl outputdir="${configuration}_${platform}/svn">
			<arg value="/O2" if="${configuration == 'release'}" />
			<arg value="/Ob1" if="${configuration == 'release'}" />
			<arg value="/Od" if="${configuration != 'release'}" />
			<arg value="/Oy" if="${configuration != 'release'}" />
			<arg value="/GF" if="${configuration == 'release'}" />
			<arg value="/FD" />
			<arg value="/EHsc" />
			<arg value="/MD" if="${configuration == 'release'}" />
			<arg value="/MDd" if="${configuration != 'release'}" />
			<arg value="/Gy" />
			<arg value="/W3" />
			<arg value="/nologo" />
			<arg value="/c" />
			<arg value="/Zi" />
			<arg value="/errorReport:prompt" />
			<sources>
				<include name="subversion/svn/*.c" />
			</sources>
			<includedirs>
				<include name="subversion" />
				<include name="subversion/include" />
				<include name="subversion/svn" />
				<include name="apr/include" />
				<include name="apr-util/include" />
				<include name="apr-util/xml/expat/lib" />
				<include name="../svn-${platform}-libintl/inc" />
				<include name="../bdb/build_${platform}" />
				<include name="../zlib" />
				<include name="neon/src" />
			</includedirs>
			<defines>
				<define name="_CRT_NONSTDC_NO_DEPRECATE" />
				<define name="_USE_32BIT_TIME_T" />
				<define name="APU_HAVE_DB=1" />
				<define name="ENABLE_NLS" />
				<define name="SVN_NEON_0_25=1" />
				<define name="alloca=_alloca" />
				<define name="snprintf=_snprintf" />
				<define name="WIN32" />
				<define name="_WINDOWS" />
				<define name="_WIN32" />
				<define name="NDEBUG" if="${configuration == 'release'}"/>
				<define name="_DEBUG" if="${configuration != 'release'}"/>
			</defines>
		</cl>
		<echo message="now linking" />
		<property name="confletter" value="" />
		<if test="${configuration == 'debug'}">
			<property name="confletter" value="D" />
		</if>

		<property name="dblibfile" value="..\bdb\build_${platform}\${configuration}\libdb44.lib" if="${not debug}"/>
		<property name="dblibfile" value="..\bdb\build_${platform}\${configuration}\libdb44d.lib" if="${debug}"/>

		<link 
			output="${configuration}_${platform}/svn.exe" 
			options='/INCREMENTAL:NO /NOLOGO /MANIFEST /MANIFESTFILE:".\${configuration}_${platform}\svn.exe.intermediate.manifest" /DEBUG /PDB:".\${configuration}_${platform}/svn.pdb" /SUBSYSTEM:CONSOLE /OPT:REF ${configuration}_${platform}\libsvn_client.lib ${configuration}_${platform}\libsvn_delta.lib ${configuration}_${platform}\libsvn_diff.lib ${configuration}_${platform}\libsvn_fs.lib ${configuration}_${platform}\libsvn_fs_base.lib ${configuration}_${platform}\libsvn_fs_fs.lib ${configuration}_${platform}\libsvn_ra.lib ${configuration}_${platform}\libsvn_ra_dav.lib ${configuration}_${platform}\libsvn_ra_local.lib ${configuration}_${platform}\libsvn_ra_svn.lib ${configuration}_${platform}\libsvn_repos.lib ${configuration}_${platform}\libsvn_subr.lib ${configuration}_${platform}\libsvn_wc.lib apr\${configuration}_${platform}\libapr.lib apr-util\${configuration}_${platform}\libaprutil.lib ${dblibfile} neon\${configuration}_${platform}\libneon.lib ..\zlib\${configuration}_${platform}\zlibstat.lib ..\openssl\out32dll\libeay32.lib ..\openssl\out32dll\ssleay32.lib ..\svn-win32-libintl\lib\intl3_svn.lib apr-util\xml\expat\lib\${configuration}_${platform}\xml.lib /MACHINE:X86 ws2_32.lib mswsock.lib rpcrt4.lib kernel32.lib advapi32.lib shell32.lib'>
			<sources>
				<include name="${configuration}_${platform}/svn/*.obj" />
			</sources>
		</link>
		<exec program="mt.exe">
			<arg value="-nologo" />
			<arg value="-manifest" />
			<arg value=".\${configuration}_${platform}\svn.exe.intermediate.manifest" />
			<arg value='/outputresource:".\${configuration}_${platform}\svn.exe;#1"' />
		</exec>

		<!-- Subversion client dll build -->
		<mkdir dir="${configuration}_${platform}/svn_client_dll" />
		<cl outputdir="${configuration}_${platform}/svn_client_dll">
			<arg value="/O2" if="${configuration == 'release'}" />
			<arg value="/Od" if="${configuration != 'release'}" />
<!--			<arg value="/Gm" if="${configuration != 'release'}" /> -->
			<arg value="/FD" />
			<arg value="/EHsc" />
			<arg value="/MT" if="${configuration == 'release'}" />
			<arg value="/MTd" if="${configuration != 'release'}" />
			<arg value="/W3" />
			<arg value="/c" />
			<arg value="/Zi" />
			<arg value="/TP" />
			<arg value="/nologo" />
			<arg value="/errorReport:prompt" />
			<sources>
				<include name="../../SvnNativeClient/*.cpp" />
			</sources>
			<includedirs>
				<include name="../../SvnNativeClient/src/" />
				<include name="subversion" />
				<include name="subversion/include" />
				<include name="subversion/svn" />
				<include name="apr/include" />
				<include name="apr-util/include" />
				<include name="apr-util/xml/expat/lib" />
				<include name="../svn-${platform}-libintl/inc" />
				<include name="../bdb/build_${platform}" />
				<include name="../zlib" />
				<include name="neon/src" />
			</includedirs>
			<defines>
				<define name="WIN32" />
				<define name="_WINDOWS" />
				<define name="_USRDLL" />
				<define name="_WINDLL" />
				<define name="SVNCLIENT_EXPORTS" />
				<define name="_VC80_UPGRADE=0x0710" />
				<define name="_MBCS" />
				<define name="NDEBUG" if="${configuration == 'release'}"/>
				<define name="_DEBUG" if="${configuration != 'release'}"/>
			</defines>
		</cl>
		<echo message="now linking" />
		<property name="confletter" value="" />
		<if test="${configuration == 'debug'}">
			<property name="confletter" value="D" />
		</if>
		<link 
			output="${configuration}_${platform}/svn_client-1.dll" 
			options='/INCREMENTAL:NO /LIBPATH:"${configuration}_${platform}" /DLL /MANIFEST /MANIFESTFILE:"${configuration}_${platform}\svn_client-1.dll.intermediate.manifest" /NODEFAULTLIB:"LIBC" /NODEFAULTLIB:"LIBCMT${confletter}" /DEF:"..\..\SvnNativeClient\svnclient.def" /SUBSYSTEM:WINDOWS /IMPLIB:"${configuration}_${platform}\svn_client-1.lib" /MACHINE:X86  apr\${configuration}_${platform}\libapr.lib apr-iconv\${configuration}_${platform}\libapriconv.lib apr-util\${configuration}_${platform}\libaprutil.lib ${dblibfile} neon\${configuration}_${platform}\libneon.lib libsvn_client.lib libsvn_delta.lib libsvn_diff.lib libsvn_fs_base.lib libsvn_fs_fs.lib libsvn_fs.lib libsvn_ra_dav.lib libsvn_ra_local.lib libsvn_ra_svn.lib libsvn_ra.lib libsvn_repos.lib libsvn_subr.lib libsvn_wc.lib ws2_32.lib apr-util\xml\expat\lib\${configuration}_${platform}\xml.lib ..\svn-win32-libintl\lib\intl3_svn.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib'>
			<sources failonempty="true">
				<include name="${configuration}_${platform}/svn_client_dll/*.obj" />
			</sources>
		</link>
		<exec program="mt.exe">
			<arg value='/outputresource:".\${configuration}_${platform}\svn_client-1.dll;#2" /manifest' />
			<arg value=".\${configuration}_${platform}\svn_client-1.dll.intermediate.manifest" />
			<arg value="/nologo" />
		</exec>
	</target>
	<target name="copyDll">
		<copy file="./${configuration}_${platform}/svn_client-1.dll" todir="${dllDir}" flatten="true" />
	</target>

</project>
